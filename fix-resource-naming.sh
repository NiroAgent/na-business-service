#!/bin/bash

echo "======================================"
echo "RESOURCE NAMING STANDARDIZATION PLAN"
echo "======================================"
echo ""
echo "Organizing all resources by organization prefix:"
echo "  • VF (VisualForge)"
echo "  • NS (NiroSubs)"
echo "  • NA (Not Applicable/General)"
echo ""

# Analyze current resources
echo "CURRENT RESOURCE ANALYSIS:"
echo "======================================"

echo ""
echo "=== LAMBDA FUNCTIONS ==="
echo "Current -> Proposed New Name:"
echo ""

# VF Lambda Functions
echo "VisualForge (VF) Functions:"
echo "  dev-visualforge-core           -> vf-core"
echo "  dev-vf-dashboard-lambda        -> vf-dashboard"
echo "  dev-vf-auth-lambda             -> vf-auth"
echo "  dev-vf-image-lambda            -> vf-image"
echo "  dev-vf-video-lambda            -> vf-video"
echo "  dev-vf-audio-lambda            -> vf-audio"
echo "  dev-vf-text-lambda             -> vf-text"
echo "  dev-vf-bulk-lambda             -> vf-bulk"
echo "  dev-visualforge-budgets-api    -> vf-budgets-api"
echo "  dev-visualforge-costs-api      -> vf-costs-api"
echo "  dev-visualforge-payments-api   -> vf-payments-api"
echo "  dev-visualforge-user-api       -> vf-user-api"
echo "  dev-visualforge-dashboard-api  -> vf-dashboard-api"
echo "  dev-visualforge-test-jwks      -> vf-test-jwks"
echo "  dev-visualforge-init-db        -> vf-init-db"
echo "  dev-visualforge-create-tables  -> vf-create-tables"
echo "  dev-visualforge-debug-db       -> vf-debug-db"
echo "  dev-visualforge-update-user    -> vf-update-user"
echo ""

echo "NiroSubs (NS) Functions:"
echo "  dev-ns-core-lambda             -> ns-core"
echo "  dev-ns-user-lambda             -> ns-user"
echo "  dev-ns-dashboard-lambda        -> ns-dashboard"
echo "  dev-ns-dashboard-api           -> ns-dashboard-api"
echo "  dev-ns-payments-lambda         -> ns-payments"
echo "  dev-ns-payments-api            -> ns-payments-api"
echo "  dev-ns-user-api                -> ns-user-api"
echo "  dev-ns-auth-lambda             -> ns-auth"
echo "  dev-ns-core                    -> ns-core-v2"
echo "  staging-ns-*                   -> [DELETE - not needed]"
echo ""

echo "General/Utility Functions:"
echo "  dev-create-test-users          -> na-create-test-users"
echo "  create_checkout_session        -> na-checkout-session"
echo ""

echo "=== DYNAMODB TABLES ==="
echo "Current -> Proposed New Name:"
echo "  dev-vf-media                   -> vf-media"
echo "  dev-vf-users                   -> vf-users"
echo "  dev-visualforge-budget-config  -> vf-budget-config"
echo "  dev-visualforge-tenant-costs   -> vf-tenant-costs"
echo "  vf-ai-generations-dev          -> vf-ai-generations"
echo "  vf-media-items-dev             -> vf-media-items"
echo "  vf-projects-dev                -> vf-projects"
echo "  vf-subscriptions-dev           -> vf-subscriptions"
echo "  DocumentManagementSystem       -> na-document-management"
echo "  UsersTable                     -> na-users"
echo ""

echo "=== API GATEWAYS ==="
echo "Current -> Proposed New Name:"
echo "  dev-visualforge-api            -> vf-api"
echo "  dev-NiroSubs-V2-api            -> ns-api"
echo ""

echo "=== CLOUDFORMATION STACKS ==="
echo "Current -> Proposed New Name:"
echo "  dev-vf-serverless-stack        -> vf-serverless-stack"
echo "  dev-visualforge-database       -> vf-database"
echo "  dev-monitoring-simple          -> na-monitoring"
echo "  dev-secrets-manager            -> na-secrets"
echo "  dev-route53-dns                -> na-route53"
echo "  dev-ns-lambda-functions        -> ns-lambda-stack"
echo "  dev-ns-auth                    -> ns-auth-stack"
echo ""

echo "======================================"
echo "BENEFITS OF THIS APPROACH:"
echo "======================================"
echo "1. Clear organization ownership (vf-, ns-, na-)"
echo "2. No redundant environment prefixes"
echo "3. Shorter, cleaner names"
echo "4. Consistent naming pattern"
echo "5. Easy to identify service ownership"
echo ""

echo "======================================"
echo "MIGRATION COMMANDS:"
echo "======================================"
echo ""
echo "# Example: Update Lambda function name (requires redeployment)"
echo "# You'll need to update CloudFormation/Serverless templates first"
echo ""
echo "# For DynamoDB tables (requires data migration):"
echo "# 1. Create new table"
echo "# 2. Copy data"
echo "# 3. Update application configs"
echo "# 4. Delete old table"
echo ""
echo "# For API Gateway (update and redeploy):"
echo "# Update the CloudFormation/Serverless template with new name"