version: '3.8'

services:
  # Dashboard API Service
  dashboard-api:
    build:
      context: ./services/dashboard-api
      dockerfile: Dockerfile
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=development
      - PORT=4000
      - FRONTEND_URL=http://localhost:3000
      # AWS credentials will be loaded from host environment
      - AWS_PROFILE=${AWS_PROFILE:-default}
      - AWS_REGION=${AWS_REGION:-us-east-1}
    volumes:
      - ~/.aws:/home/nodejs/.aws:ro
      - ./services/dashboard-api/src:/app/src
    networks:
      - dashboard-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  # Dashboard Frontend Service  
  dashboard-mfe:
    build:
      context: ./services/dashboard-mfe
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:4000
      - VITE_WS_URL=ws://localhost:4000
    volumes:
      - ./services/dashboard-mfe/src:/app/src
    networks:
      - dashboard-network
    depends_on:
      dashboard-api:
        condition: service_healthy
    restart: unless-stopped

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - dashboard-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 3s
      retries: 3
    restart: unless-stopped

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./infrastructure/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./infrastructure/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - dashboard-network
    depends_on:
      - dashboard-api
      - dashboard-mfe
    restart: unless-stopped

volumes:
  redis_data:
    driver: local

networks:
  dashboard-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
