# VF-Dev Live Dashboard Deployment Configuration
# Deploy to VF-dev environment for persistent access

apiVersion: apps/v1
kind: Deployment
metadata:
  name: vf-live-dashboard
  namespace: vf-dev
  labels:
    app: vf-live-dashboard
    project: visualforgemediav2
    environment: dev
spec:
  replicas: 2
  selector:
    matchLabels:
      app: vf-live-dashboard
  template:
    metadata:
      labels:
        app: vf-live-dashboard
    spec:
      serviceAccountName: vf-dashboard-service-account
      containers:
      - name: dashboard
        image: 319040880702.dkr.ecr.us-east-1.amazonaws.com/vf-live-dashboard:latest
        ports:
        - containerPort: 5003
          name: http
        env:
        - name: AWS_DEFAULT_REGION
          value: "us-east-1"
        - name: VF_DEV_ACCOUNT
          value: "319040880702"
        - name: VF_STAGING_ACCOUNT  
          value: "275057778147"
        - name: VF_PROD_ACCOUNT
          value: "229742714212"
        - name: FLASK_ENV
          value: "production"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 5003
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 5003
          initialDelaySeconds: 5
          periodSeconds: 5

---
apiVersion: v1
kind: Service
metadata:
  name: vf-live-dashboard-service
  namespace: vf-dev
spec:
  selector:
    app: vf-live-dashboard
  ports:
  - port: 80
    targetPort: 5003
    protocol: TCP
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: vf-live-dashboard-ingress
  namespace: vf-dev
  annotations:
    kubernetes.io/ingress.class: "alb"
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:319040880702:certificate/your-cert-id
spec:
  rules:
  - host: dev.visualforge.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: vf-live-dashboard-service
            port:
              number: 80

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vf-dashboard-service-account
  namespace: vf-dev
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::319040880702:role/VFDashboardServiceRole

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: vf-dashboard-reader
rules:
- apiGroups: [""]
  resources: ["pods", "services", "nodes"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets"]
  verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vf-dashboard-reader-binding
subjects:
- kind: ServiceAccount
  name: vf-dashboard-service-account
  namespace: vf-dev
roleRef:
  kind: ClusterRole
  name: vf-dashboard-reader
  apiGroup: rbac.authorization.k8s.io
