AWSTemplateFormatVersion: '2010-09-09'
Description: 'Minimal Cost-Optimized Single Instance AI Agent System for VF-Dev'

Parameters:
  InstanceType:
    Type: String
    Default: t3.large
    AllowedValues: [t3.medium, t3.large, t3.xlarge]
    Description: EC2 instance type

Resources:
  # IAM Role for EC2 Instance
  AgentInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
      Policies:
        - PolicyName: AgentSystemAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - sqs:*
                  - lambda:InvokeFunction
                  - logs:*
                  - ssm:GetParameter
                  - ssm:GetParameters
                  - secretsmanager:GetSecretValue
                Resource: '*'

  AgentInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles: [!Ref AgentInstanceRole]

  # Security Group (using default VPC)
  AgentSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for AI Agent instance
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0

  # EC2 Instance
  AgentInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-0c02fb55956c7d316
      InstanceType: !Ref InstanceType
      IamInstanceProfile: !Ref AgentInstanceProfile
      SecurityGroupIds: [!Ref AgentSecurityGroup]
      UserData:
        Fn::Base64: |
          #!/bin/bash
          yum update -y
          yum install -y python3 python3-pip git tmux htop
          
          # Create agent user
          useradd -m -s /bin/bash agent
          mkdir -p /home/agent
          chown -R agent:agent /home/agent
          
          # Install dependencies
          pip3 install boto3 requests
          
          # Create simple agent script
          cat > /home/agent/agent.py << 'SCRIPT'
          #!/usr/bin/env python3
          import sys
          import time
          import argparse
          from datetime import datetime
          
          def main():
              parser = argparse.ArgumentParser()
              parser.add_argument('--agent-id', type=int, required=True)
              args = parser.parse_args()
              
              print(f"Starting Agent {args.agent_id} in vf-dev")
              
              while True:
                  try:
                      print(f"[{datetime.now()}] Agent {args.agent_id} processing...")
                      time.sleep(30)
                  except KeyboardInterrupt:
                      print(f"Agent {args.agent_id} shutting down...")
                      break
                  except Exception as e:
                      print(f"Agent {args.agent_id} error: {e}")
                      time.sleep(5)
          
          if __name__ == '__main__':
              main()
          SCRIPT
          
          chmod +x /home/agent/agent.py
          chown agent:agent /home/agent/agent.py
          
          # Create startup script for 50 agents
          cat > /home/agent/start-agents.sh << 'EOF'
          #!/bin/bash
          echo "Starting 50 AI agents..."
          
          for i in {1..50}; do
            tmux new-session -d -s "agent-$i" "python3 /home/agent/agent.py --agent-id $i"
            echo "Started agent $i"
            sleep 0.1
          done
          
          echo "All 50 agents started!"
          tmux list-sessions
          EOF
          
          chmod +x /home/agent/start-agents.sh
          chown agent:agent /home/agent/start-agents.sh
          
          # Start agents
          sudo -u agent /home/agent/start-agents.sh
      Tags:
        - Key: Name
          Value: vf-dev-agent-instance
        - Key: Purpose
          Value: '50 AI Agents Cost Optimized'

Outputs:
  InstanceId:
    Description: Instance ID
    Value: !Ref AgentInstance
  
  InstancePublicIP:
    Description: Public IP
    Value: !GetAtt AgentInstance.PublicIp
  
  SSHCommand:
    Description: SSH command
    Value: !Sub 'ssh -i your-key.pem ec2-user@${AgentInstance.PublicIp}'
  
  CostEstimate:
    Description: Monthly cost
    Value: '$60-70/month for 50 agents'
